{
    "basePath": "http://localhost:8000/api/v1/",
    "swaggerVersion": "1.2",
    "apiVersion": "1.0.0",
    "resourcePath": "/notifications",
    "apis": [
        {
            "path": "/notifications",
            "operations": [
                {
                    "method": "GET",
                    "summary": "Gets All activities in the database",
                    "nickname": "getAllActivities",
                    "type": "Activity",
                    "notes": "Returns all activities Not transformed"
                },
                {
                    "method": "POST",
                    "summary": "Find an activity by activity_id",
                    "nickname": "getActivityById",
                    "type": "Activity",
                    "parameters": [
                        {
                            "paramType": "path",
                            "name": "activity_id",
                            "type": "integer",
                            "required": true,
                            "description": "id of activity that needs to be fetched",
                            "format": "int64",
                            "minimum": "1.0",
                            "maximum": "100000.0"
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 400,
                            "message": "Invalid activity_id supplied"
                        },
                        {
                            "code": 404,
                            "message": "Activity not found"
                        }
                    ],
                    "notes": "Returns an activity based on activity_id"
                }
            ]
        },
        {
            "path": "/notifications{stranger_id}",
            "operations": [
                {
                    "method": "DELETE",
                    "summary": "Find an activity by activity_id",
                    "nickname": "getActivityById",
                    "type": "Activity",
                    "parameters": [
                        {
                            "paramType": "path",
                            "name": "activity_id",
                            "type": "integer",
                            "required": true,
                            "description": "id of activity that needs to be fetched",
                            "format": "int64",
                            "minimum": "1.0",
                            "maximum": "100000.0"
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 400,
                            "message": "Invalid activity_id supplied"
                        },
                        {
                            "code": 404,
                            "message": "Activity not found"
                        }
                    ],
                    "notes": "Returns an activity based on activity_id"
                }
            ]
        }
    ],
    "models": {
        "Activity": {
            "id": "Activity",
            "properties": {
                "id": {
                    "description": "Unique identifier for the Pet",
                    "type": "integer",
                    "format": "int64",
                    "minimum": "0.0",
                    "maximum": "100.0"
                },
                "name": {
                    "description": "Friendly name of the pet",
                    "type": "string"
                },
                "category": {
                    "description": "Category the pet is in",
                    "$ref": "Category"
                },
                "photoUrls": {
                    "description": "Image URLs",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "tags": {
                    "description": "Tags assigned to this pet",
                    "type": "array",
                    "items": {
                        "$ref": "Tag"
                    }
                },
                "status": {
                    "description": "pet status in the store",
                    "type": "string",
                    "enum": [
                        "available",
                        "pending",
                        "sold"
                    ]
                }
            },
            "required": [
                "id",
                "name"
            ]
        }
    },
    "produces": [
        "application/json",
        "application/xml",
        "text/plain",
        "text/html"
    ]
}